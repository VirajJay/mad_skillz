--------------
Breif overview
--------------
An arduino motion sensor is used as means of creating morse code. this morse code is 
generated by a user in the server side and is sent to the client via firebase. the client-side 
then decodes it to english and displays it on a local webpage. 

----------
What's new
----------
Added functionality:
    * support for numbers [0-9]
    * support for punctuations: '.', ',', ':', '?', "'", '-', '/', '(', ')', '@', '='
    * able to stop communication from server side
    * able to start or pause communication from client side   	

-----------------------------------------------------------
High-Level technical explanation of how the program works:
-----------------------------------------------------------
############
Server-Side:
############
when a motion is made, timestamp is taken. after end of motion, 
another timestamp is taken and their difference calculated. If the difference is more than 
5 seconds, long motion, less than 5 seconds, short motion. upload "L" for long motion into firebase.
upload "S" for short motion to firebase.

if the time between the motion.on("motionend") and the next motion.on("motionstart")
is more than 7 seconds, its a new word. upload "new_word" to firebase.

if the time between the motion.on("motionend") and the next motion.on("motionstart")
is more than 3 seconds and less than 7 seconds, its a new letter. upload "new_letter" to firebase.

############
Client-Side:
############
Eachtime a child is added, 4 scenarios are covered by if statements. 

Scenario 1:
added child on firebase is "new_letter"
string called "letter_to_decode" is sent as a parameter to the decoding function.
its output is incremented to the string variable "output"

Scenario 2:
added child on firebase is "new_word"
same as new_letter except a space is also added to the output.

Scenario 3:
added child on firebase is "S" or "L"
incremented into "letter_to_decode" string variable

Scenario 4:
this is the else statement. The only reason this will be called is if
the child added to firebase isnt "S", "L", "new_word" or "new_letter". Since these 4 are 
the only inputs that we upload from the server side, there is no other way anything different
can make to the client side, unless somebody changed something in the database or due
to some type of data-loss, giving an incorrect value. changes output to "WE HAVE BEEN HACKED" 
to let the user know that something is wrong and deletes everything in the firebase database. 

----------------------------
bugs/non-obvious limitations
----------------------------
Algorithmically speaking, the program is quite reliable as it is simple in design.
Only real way any faults can occur is if something happens with the firebase server
during the storage of the data or while it is been sent or received. For instance, firebase
may go offline for maintenance. 

There is one limitation to the program that is non-obvious.
In the user interface, when the checkbox is unticked, the client side just ignores signals
sent from the server. The server will still keep accepting motions and upload them to firebase
but those data will just be ignored from the client side. once the box is ticked again, new 
children uploaded to firebase will be accepted by the client side.

message wont be displayed unless a new_word or a new_letter is sent from database
